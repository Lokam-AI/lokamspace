"""Add nullable fields

Revision ID: 7072ae838f90
Revises: aa06ff653683
Create Date: 2025-06-14 22:08:24.529688

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7072ae838f90'
down_revision: Union[str, None] = 'aa06ff653683'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('surveys')
    op.drop_table('survey_responses')
    op.drop_table('call_interactions')
    op.drop_table('customers')
    op.drop_table('survey_questions')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('survey_questions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('survey_questions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('question_text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('section', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='survey_questions_organization_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='survey_questions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('customers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('vehicle_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='customers_organization_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='customers_pkey'),
    sa.UniqueConstraint('vehicle_number', name='customers_vehicle_number_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('call_interactions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('call_interactions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('service_record_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('call_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('duration_seconds', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transcription', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['service_record_id'], ['service_records.id'], name='call_interactions_service_record_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='call_interactions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('survey_responses',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('survey_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('question_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('response', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['survey_questions.id'], name='survey_responses_question_id_fkey'),
    sa.ForeignKeyConstraint(['survey_id'], ['surveys.id'], name='survey_responses_survey_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='survey_responses_pkey')
    )
    op.create_table('surveys',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('call_interaction_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('overall_feedback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('overall_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('timeliness_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cleanliness_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('advisor_helpfulness_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('work_quality_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('recommendation_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('action_items', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['call_interaction_id'], ['call_interactions.id'], name='surveys_call_interaction_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='surveys_pkey'),
    sa.UniqueConstraint('call_interaction_id', name='surveys_call_interaction_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
