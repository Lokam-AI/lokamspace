"""add_type_field_to_tags

Revision ID: 981fc91cc022
Revises: 5f4675588be8
Create Date: 2025-07-12 21:15:17.953596

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '981fc91cc022'
down_revision: Union[str, None] = '5f4675588be8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("""
    DO $$
    BEGIN
        IF EXISTS (
            SELECT 1
            FROM information_schema.tables 
            WHERE table_name = 'knowledgefiles'
        ) THEN
            DROP TABLE knowledgefiles;
        END IF;
    END
    $$;
""")
    
    # Add the type column as nullable first
    op.add_column('tags', sa.Column('type', sa.String(length=20), nullable=True))
    
    # Update existing records to set a default value
    op.execute("""
        UPDATE tags
        SET type = 'service_types'
    """)
    
    # Now make the column not nullable
    op.alter_column('tags', 'type', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('tags', 'type')
    op.create_table('knowledgefiles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('organization_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('file_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('uploaded_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name=op.f('knowledgefiles_organization_id_fkey')),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], name=op.f('knowledgefiles_uploaded_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('knowledgefiles_pkey'))
    )
    # ### end Alembic commands ### 