"""update_organization_location_and_phone_fields

Revision ID: 1f82a9dc57f8
Revises: 777e24ed4f90
Create Date: 2025-07-05 11:42:53.512991

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm import Session
from sqlalchemy import text


# revision identifiers, used by Alembic.
revision: str = '1f82a9dc57f8'
down_revision: Union[str, None] = '777e24ed4f90'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('organization', sa.Column('phone_booking', sa.String(length=20), nullable=True))
    op.add_column('organization', sa.Column('phone_inquiry', sa.String(length=20), nullable=True))
    op.add_column('organization', sa.Column('location_city', sa.String(length=255), nullable=True))
    op.add_column('organization', sa.Column('location_value', sa.String(length=100), nullable=True))
    op.create_unique_constraint(None, 'organization', ['id'])
    
    # Data migration: Copy data from old columns to new ones
    connection = op.get_bind()
    session = Session(bind=connection)
    
    # Migrate phone numbers
    session.execute(
        text("""
            UPDATE organization 
            SET phone_booking = phone_service,
                phone_inquiry = phone_support
        """)
    )
    
    # Migrate location data (assuming location contains city name)
    session.execute(
        text("""
            UPDATE organization 
            SET location_city = location
            WHERE location IS NOT NULL
        """)
    )
    
    session.commit()
    
    # Drop old columns after data migration
    op.drop_column('organization', 'phone_support')
    op.drop_column('organization', 'phone_service')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('organization', sa.Column('phone_service', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('organization', sa.Column('phone_support', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    
    # Data migration for downgrade
    connection = op.get_bind()
    session = Session(bind=connection)
    
    # Migrate phone numbers back
    session.execute(
        text("""
            UPDATE organization 
            SET phone_service = phone_booking,
                phone_support = phone_inquiry
        """)
    )
    
    # Migrate location data back
    session.execute(
        text("""
            UPDATE organization 
            SET location = location_city
            WHERE location IS NULL AND location_city IS NOT NULL
        """)
    )
    
    session.commit()
    
    op.drop_constraint(None, 'organization', type_='unique')
    op.drop_column('organization', 'location_value')
    op.drop_column('organization', 'location_city')
    op.drop_column('organization', 'phone_inquiry')
    op.drop_column('organization', 'phone_booking')
    # ### end Alembic commands ### 