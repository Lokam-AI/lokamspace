"""Adding Customer columns

Revision ID: 6a253fa9a632
Revises: e627ddd9da20
Create Date: 2025-06-07 10:15:35.545776

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6a253fa9a632'
down_revision: Union[str, None] = 'e627ddd9da20'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('vehicle_number', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vehicle_number')
    )
    op.add_column('service_records', sa.Column('customer_id', sa.Integer(), nullable=False))
    op.add_column('service_records', sa.Column('assigned_user_id', sa.Integer(), nullable=True))
    op.drop_constraint('service_records_user_id_fkey', 'service_records', type_='foreignkey')
    op.create_foreign_key(None, 'service_records', 'users', ['assigned_user_id'], ['id'])
    op.create_foreign_key(None, 'service_records', 'customers', ['customer_id'], ['id'])
    op.drop_column('service_records', 'user_id')
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.drop_constraint('users_vehicle_number_key', 'users', type_='unique')
    op.create_unique_constraint(None, 'users', ['email'])
    op.drop_column('users', 'vehicle_number')
    op.drop_column('users', 'phone')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('vehicle_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.create_unique_constraint('users_vehicle_number_key', 'users', ['vehicle_number'], postgresql_nulls_not_distinct=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.add_column('service_records', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'service_records', type_='foreignkey')
    op.drop_constraint(None, 'service_records', type_='foreignkey')
    op.create_foreign_key('service_records_user_id_fkey', 'service_records', 'users', ['user_id'], ['id'])
    op.drop_column('service_records', 'assigned_user_id')
    op.drop_column('service_records', 'customer_id')
    op.drop_table('customers')
    # ### end Alembic commands ###
